service:
  - docker
env:
  global:
    - TERM=dumb
    - secure: rbv5UwJyAECUi3AYqfzcmX0aXvzWjyuBtyDmvfRnNm2bDyal5dy16hxOiTPSNv0lsZ/2s7oiRxx9z8dcXf2p/Ff4VGFJvRpgFaqAa1ual93kyF0JED4hGoheEuTKEHnqYJcZRIqGgJioPkXlx2Oj0oUuaK9ncbl2SjLKHtvhbf6spBwp4CS7/65l6Bvpo9mc+d9llb3pJ2YG2FEsy43bxrUwu3xv9qYnRyGUfTpmGyvHDse0qaulzhHyaY/qs4t6A19GGcG53CTK4fCirAHiZEkElpv5dCMZU+pZWloxsMPE3zgJWJE3u6GuWZz0jfDmcf7mUZgt+Ty6BKeQn+Ef48YKqLliCnZ6je/0P5R6Yrk3XYkxgsHNHq+0V/9g9Xkv5lC3LJHecgVz/hiTKsMAEfEmVMCVL4aLYfYgnzPn1HjxOvt4UY07uVl0Sl7ncU3Jez6zIpQDJz/+ms3LJx8VeTHbnE4cn4Aft+LbQR5Z5JjKOCcCz+e+nx8nHumHUcpLnZWDl+pDdI9r4dN870sFdJMVeI+g9uoSbMpW5zN6TIAZBY3FyIeCbZI2Xh95ZyGi5xkXJ+G2bqYbnTgADE88Ej7pDzklmfH5vUzNfjY8b1F620i7xI1AmzwEWBGuJw9yu9AUdGcDSnLkAH5pg0VnoT4vb6y3Oa9C2msqCkoqiZw=
dist: xenial
notifications:
  email: false
git:
  quiet: true
  depth: 1
language: java
jdk: openjdk8
node_js: lts/*
python: 3
addons:
  apt:
    update: true
    packages:
      - sudo
      - lsof
      - wget
      - bash
      - curl
      - jq
      - libxml2-utils
      - unzip
      - docker-ce
      - python3-dev
      - python3-pip
      - python3-six
      - python3-setuptools
install: true
before_install:
  - docker-compose -v
  - export PATH=$HOME/.local/bin:$PATH
  - pip3 install --user $(whoami) --upgrade pip >/dev/null # pip3 -> pip
  - pip install --user $(whoami) --upgrade docker-compose httpie >/dev/null 2>&1
  - http --version --debug
  - docker-compose -v
  #
  - source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
  - stop_any 80 8001 8002 8080 5432 5672 27017
before_script:
  - export parent=$(pwd)
  # https://github.com/sormuras/bach#install-jdksh
  # https://docs.travis-ci.com/user/languages/java/
stages:
  - test
  - deploy
jobs:
  include:
    - stage: test
      jdk: openjdk8
      name: a-simple-example openjdk8
      script:
        - cd $TRAVIS_BUILD_DIR/a-simple-example && ./sbtw clean test
        - cd $TRAVIS_BUILD_DIR/a-simple-example && ./sbtw run
        - cd $TRAVIS_BUILD_DIR/a-simple-example && ./sbtw clean assembly
        - java -jar $TRAVIS_BUILD_DIR/a-simple-example/target/scala-*/*-assembly-*.jar
    - stage: test
      jdk: openjdk11
      name: a-simple-example openjdk11
      script:
        - cd $TRAVIS_BUILD_DIR/a-simple-example && ./sbtw clean test
        - cd $TRAVIS_BUILD_DIR/a-simple-example && ./sbtw run
        - cd $TRAVIS_BUILD_DIR/a-simple-example && ./sbtw clean assembly
        - java -jar $TRAVIS_BUILD_DIR/a-simple-example/target/scala-*/*-assembly-*.jar
    - stage: test
      jdk: openjdk-ea
      name: hello-world
      script:
        ##
        ## jdk 12
        ##
        - cd ${parent}/hello-world
        - ./mvnw clean package
        - java -jar ./target/*-all.jar
        - ./gradlew clean build fatJar
        - java -jar ./build/libs/*-all.jar
    - stage: test
      jdk: openjdk8
      name: idea-scala-sbt-project
      script:
        ##
        ## jdk 8
        ##
        ##- jdk_switcher use oraclejdk8
        #- jdk_switcher use openjdk8
        ##
        - cd ${parent}/idea-scala-sbt-project
        - ./sbtw clean compile test assembly
        - java -jar target/scala-2.12/*-assembly-*.jar
    - stage: test
      jdk: openjdk8
      name: another-akka-try
      script:
        #
        - cd ${parent}/another-akka-try
        - bash ./gradlew clean installDist >/dev/null
        - bash ./build/install/another-akka-try/bin/another-akka-try
        - bash ./mvnw clean package com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:up
        - bash ./mvnw com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:down
    - stage: test
      jdk: openjdk8
      name: anothers...
      script:
        #
        - >
          for path in \
            scala-gradle-maven-docker-starter \
            kotlin-gradle-maven-docker-starter \
            java-gradle-maven-docker-starter \
          ; do
            cd ${parent}/${path} ;
            bash mvnw >/dev/null ;
            bash gradlew >/dev/null ;
            docker-compose build --force-rm --no-cache --pull ;
            docker-compose up --force-recreate --remove-orphans ;
            docker-compose down -v ;
          done;
      #  - docker system prune -af --volumes
    - stage: deploy
      jdk: openjdk8
      name: GitHub release and GitHub pages deployment
      script: skip
      if: branch = "master" AND type NOT IN (pull_request)
      before_deploy:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ] || [ ".$TRAVIS_BRANCH" != ".master" ] ; then exit 0 ; fi
        - env
        - cd ${parent}
        - ./mvnw
      deploy: &pages
        provider: pages
        skip-cleanup: true
        # travis encrypt GITHUB_TOKEN=<your github repo token> --add
        github-token: "$GITHUB_TOKEN"
        keep-history: true
        local-dir: target/generated-docs
        target_branch: gh-pages
        on:
          branch: master
          condition: "$TRAVIS_PULL_REQUEST = false"
before_cache:
  - bash -c 'for item in $(find ~/.gradle -name "*.lock") ; do sudo rm -rf $item ; done'
cache:
  pip: true
  packages: true
  directories:
    - $HOME/.m2
    - $HOME/.sbt
    - $HOME/.ivy
    - $HOME/.gradle
    - $HOME/.docker
    - $HOME/openjdk*
